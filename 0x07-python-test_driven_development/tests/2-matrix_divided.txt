The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is a doctest test file to test the matrix_divided function in
the module 2-matrix_divided.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6],
    ...     ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> try:
    ...     print(matrix_divided([[]], 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> try:
    ...     print(matrix_divided([], 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]
    >>> try:
    ...     print(matrix_divided(None, 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> try:
    ...     print(matrix_divided([1, 2], 3))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> try:
    ...     print(matrix_divided([[1, 2], [3, 4, 5]], 3))
    ... except Exception as e:
    ...     print(e)
    Each row of the matrix must have the same size
    >>> try:
    ...     print(matrix_divided([[1, 2, 3], [4, 5, 6]], "Hello"))
    ... except Exception as e:
    ...     print(e)
    div must be a number
    >>> try:
    ...     print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
    ... except Exception as e:
    ...     print(e)
    division by zero
    >>> try:
    ...     print(matrix_divided([[1, 2, 3], [4, "Hello", 6]], 2))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> try:
    ...     print(matrix_divided([[1, [1, 2], 3], [4, 5, 6]], 2))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
